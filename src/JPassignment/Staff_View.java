/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package JPassignment;


import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Acer
 */
public class Staff_View extends javax.swing.JFrame {

    /**
     * Creates new form Staff
     */
    
    DefaultTableModel model;
    public static Staff r = new Staff();
    
    private void initializedTableViewStaff() {
       model = (DefaultTableModel) stafftbl.getModel();
        String[] data = Staff.returnAll();
        Staff newID = new Staff();
        newID.returnNewestID();
        int latestID = newID.getstaffID()+1;
        for (int i = 1; i < latestID; i++) {
            String id = String.valueOf(i);
            Staff staff = Staff.getstaffbyid(id);
            if (staff == null){
            
            } else{
            model.insertRow(model.getRowCount(), new Object[] {
                 staff.getstaffID(), staff.getname(),staff.getposition(),staff.getemail()
            });
            
            }
        }
    }
    public Staff_View() {
        initComponents();
        initializedTableViewStaff();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stafftbl = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        searchfield = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        back = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        register = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        stafftbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Staff ID", "Name", "Role", "Email"
            }
        ));
        jScrollPane1.setViewportView(stafftbl);

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        title.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Staff Detail");

        register.setText("Register");
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(back)
                                .addGap(102, 102, 102)
                                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(register)
                                .addGap(51, 51, 51)
                                .addComponent(update)
                                .addGap(54, 54, 54)
                                .addComponent(delete)
                                .addGap(118, 118, 118)
                                .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(search)))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(back)
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(register)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search)
                        .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(delete)
                        .addComponent(update)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        
        int column = 0;
        int row = stafftbl.getSelectedRow();
        boolean flag = true;
         if (row == -1){
             JOptionPane.showMessageDialog(null, "Please select a staff");
             flag = false;
        }
         
        if (flag == true) {
        String nameString = stafftbl.getModel().getValueAt(row, column).toString();
        System.out.println(nameString);
        r= Staff.getstaffbyid(nameString);
        
        Staff_Edit m = new Staff_Edit();
        this.hide();
        m.setVisible(true);
        
        
        DefaultTableModel resetTable = (DefaultTableModel) stafftbl.getModel();
        resetTable.setRowCount(0);

       
        }
        
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        int column = 0;
        int row = stafftbl.getSelectedRow();
        boolean flag = true;
        
        
        if (row == -1){
             JOptionPane.showMessageDialog(null, "Please select a staff to delete");
             flag = false;
        }
        
        if (flag == true) {
        String nameString = stafftbl.getModel().getValueAt(row, column).toString();
        System.out.println(nameString);
        Staff staff = Staff.getstaffbyid(nameString);
        
        if (JOptionPane.showConfirmDialog(null, "Confirm to delete this staff record?", "Xesort", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
            if(staff.delete()){
             JOptionPane.showMessageDialog(this, "The staff record is deleted"); 
             DefaultTableModel resetTable = (DefaultTableModel) stafftbl.getModel();
                resetTable.setRowCount(0);
             
             initializedTableViewStaff();
             }
        }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        Home m = new Home();
        this.hide();
        m.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed
        // TODO add your handling code here:
        Staff_Register m = new Staff_Register();
        this.hide();
        m.setVisible(true);
    }//GEN-LAST:event_registerActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel resetTable = (DefaultTableModel) stafftbl.getModel();
                resetTable.setRowCount(0);
       
        model = (DefaultTableModel) stafftbl.getModel();
        if (searchfield.getText().isEmpty()){
            
                resetTable.setRowCount(0);
             
             initializedTableViewStaff();
        }else{
        
         ArrayList<Staff> userByName = Staff.getstaffbyname(searchfield.getText());
        
        
         for (Staff staff : userByName) {
              model.insertRow(model.getRowCount(), new Object[] {
                 staff.getstaffID(),staff.getname(),staff.getposition(),staff.getemail()
              });
          }
        }
    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Staff_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Staff_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Staff_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Staff_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Staff_View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton delete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton register;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchfield;
    private javax.swing.JTable stafftbl;
    private javax.swing.JLabel title;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
